{"version":3,"sources":["ColorModeSwitcher.tsx","components/Header.tsx","ui/TaskStar.tsx","ui/TaskItem.tsx","ui/YearItem.tsx","components/Drawer.tsx","components/Home.tsx","utils/index.ts","solutionContext.ts","components/Task.tsx","solutions/2020/1_report_repair/index.ts","solutions/2020/2_password_philosophy/index.ts","solutions/2020/3_toboggan_trajectory/index.ts","solutions/2020/4_passport_processing/index.ts","solutions/2020/5_binary_boarding/index.ts","solutions/2020/6_custom_customs/index.ts","solutions/2020/7_handy_haversacks/index.ts","solutions/index.ts","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","aria-label","Header","openDrawer","closeDrawer","isDrawerOpen","as","alignItems","justifyContent","Hamburger","boxSize","position","top","left","margin","ReachLink","to","right","TaskStar","done","first","MdStar","marginRight","marginBottom","TaskItem","id","title","second","year","YearItem","tasks","flex","textAlign","pb","map","task","idx","Drawer","isOpen","onClose","years","placement","allowToggle","Home","centerContent","padding","href","isExternal","marginTop","getInput","file","a","separator","fetch","process","response","split","getFileAsText","uri","isInternal","SolutionContext","createContext","Task","useParams","day","find","y","getTask","useContext","useState","code","setCode","input","setInput","isLoading","setIsLoading","solution1","setSolution1","solution2","setSolution2","solutionUri","inputUri","SyntaxHighlighter","registerLanguage","js","useEffect","loadData","codeAsText","inputAsText","undefined","descriptionUri","tempSolutionUri","tempInputUri","solutionFn","calculateSolution","sol1","sol2","direction","ExternalLink","spacing","paddingLeft","colorScheme","loadingText","rightIcon","ArrowForward","language","wrapLongLines","showLineNumbers","style","darcula","reportRepair","part1","string_list","list","line","i","length","element1","j","element2","z","element3","passwordPhilosophy","filter","elem","isPwdValid","row","range","rowValue","password","min","max","value","replace","low","high","extractInfosFromRow","occurence","str","chr","_","lowMatched","charAt","startsWith","highMatched","tobogganTrajectory","countInputs","down","countTree","countInput","count","max_x","treeCount","passportProcessing","cleanList","passport","isValidPassport","lines","passports","currentPassport","trim","Object","keys","push","keyValue","t","field","fields","Map","set","regex","RegExp","fieldValidator","parseInt","indexOf","entries","test","TRANSALTION","binaryBoarding","seatIds","convertToSeatId","allSeatsIds","mySeatId","boardingPass","seatId","get","substr","CustomCustoms","Set","replaceAll","toString","everyoneAnsweredYes","answers","allAnswers","answersProPerson","answ","yesForEveryone","answPerson","handyHaversacks","myBag","bagRules","entry","createRule","validBagsCount","rule","isValidBag","bags","myBagRule","getRule","countBags","rules","reduce","acc","bag","bagRule","bagType","flatMap","bagIndex","findIndex","bagRegex","bagdRegex","match","filtered","rawBag","rawBagMatch","solutions","customCustoms","App","useDisclosure","onOpen","customTheme","extendTheme","config","useSystemColorMode","initialColorMode","theme","Provider","basename","minH","p","path","children","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.98129b6b.chunk.js","sourcesContent":["import * as React from \"react\"\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from \"@chakra-ui/react\"\nimport { FaMoon, FaSun } from \"react-icons/fa\"\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue(\"dark\", \"light\")\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  )\n}\n","import { Flex, Heading, IconButton, Link } from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport React, {  } from \"react\";\nimport { ColorModeSwitcher } from \"../ColorModeSwitcher\";\nimport { Link as ReachLink } from 'react-router-dom';\n\ntype HeaderProps = {\n    openDrawer: () => void;\n    closeDrawer: () => void\n    isDrawerOpen: boolean;\n}\n\nexport const Header = ({openDrawer, closeDrawer, isDrawerOpen}: HeaderProps) => {\n  return (\n    <Flex as=\"nav\" alignItems=\"center\" justifyContent=\"center\">\n      <IconButton\n        size=\"lg\"\n        aria-label=\"menu\"\n        icon={<HamburgerIcon boxSize={8}/>}\n        variant=\"ghost\"\n        color=\"current\"\n        marginLeft=\"2\"\n        position=\"absolute\"\n        top=\"0\"\n        left=\"0\"\n        onClick={isDrawerOpen ? () => closeDrawer() : () => openDrawer()}\n      />\n      <Heading margin=\"2\"><Link as={ReachLink} to={\"\"}>Advent of code</Link></Heading>\n      <ColorModeSwitcher position=\"absolute\" top=\"0\" right=\"0\" />\n    </Flex>\n  );\n};\n","import { ListIcon } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { MdStar } from \"react-icons/md\";\n\ntype TaskStarProps = {\n  done?: boolean;\n  first?: boolean;\n};\nconst TaskStar = ({ done, first }: TaskStarProps) => (\n  <ListIcon\n    as={MdStar}\n    marginLeft={first ? 1 : 0}\n    marginRight={0}\n    marginBottom=\"0.15rem\"\n    color={done ? \"yellow.500\" : \"inhirit\"}\n  />\n);\n\nexport default TaskStar;\n","import { Box, Flex, Link, ListItem } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport TaskStar from \"./TaskStar\";\nimport { Link as ReachLink } from 'react-router-dom';\n\nexport type TaskItemProps = {\n  id: string;\n  title: String;\n  year?: string;\n  first?: boolean;\n  second?: boolean;\n};\nconst TaskItem = ({ id, title, first, second, year }: TaskItemProps) => {\n  return (\n    <ListItem marginBottom={1}>\n      <Flex justifyContent=\"flex-start\">\n        <Box>\n          <Link as={ReachLink} to={`/${year}/${id}`}>{title}</Link>\n        </Box>\n        <Box marginLeft=\"auto\">\n          <TaskStar first done={first} />\n          <TaskStar done={second} />\n        </Box>\n      </Flex>\n    </ListItem>\n  );\n};\n\nexport default TaskItem;\n","import { AccordionItem, AccordionButton, Box, AccordionIcon, AccordionPanel, List } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { TaskProps } from \"../components/Task\";\nimport TaskItem from \"./TaskItem\";\n\nexport type YearItemProps = {\n    id: string;\n    tasks: Array<TaskProps>\n}\nconst YearItem = ({id, tasks}: YearItemProps) => {\n  return (\n    <AccordionItem>\n      <AccordionButton>\n        <Box flex=\"1\" textAlign=\"left\">\n          {id}\n        </Box>\n        <AccordionIcon />\n      </AccordionButton>\n      <AccordionPanel pb={2}>\n        <List>\n            {\n                tasks.map((task, idx) => <TaskItem key={idx} year={id} {...task}/>)\n            }\n        </List>\n      </AccordionPanel>\n    </AccordionItem>\n  );\n};\n\nexport default YearItem;\n","import {\n  DrawerOverlay,\n  DrawerContent,\n  DrawerHeader,\n  DrawerBody,\n  Accordion,\n  Drawer as ChakraDrawer,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport YearItem, { YearItemProps } from \"../ui/YearItem\";\n\ntype DrawerProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  years: YearItemProps[];\n};\nconst Drawer = ({ isOpen, onClose, years }: DrawerProps) => (\n  <ChakraDrawer isOpen={isOpen} placement=\"left\" onClose={() => onClose()}>\n    <DrawerOverlay>\n      <DrawerContent>\n        <DrawerHeader>Years</DrawerHeader>\n        <DrawerBody>\n          <Accordion allowToggle>\n            {years.map((year, idx) => (\n              <YearItem key={idx} {...year} />\n            ))}\n          </Accordion>\n        </DrawerBody>\n      </DrawerContent>\n    </DrawerOverlay>\n  </ChakraDrawer>\n);\n\nexport default Drawer;\n","import { Container, Link } from \"@chakra-ui/react\";\nimport { Text } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nconst Home = () => (\n  <Container centerContent padding={20} >\n    <Text fontSize=\"3xl\" as=\"cite\">\n      <Link color=\"teal.500\" href=\"https://adventofcode.com/\" isExternal>\n        Advent of Code&nbsp;\n      </Link>\n      is an Advent calendar of small programming puzzles for a variety of skill\n      sets and skill levels that can be solved in any programming language you\n      like.\n    </Text>\n    <Text marginTop={4} fontSize=\"3xl\">\n      This site aims to collect my solutions (when I find them\n      😉) for the different exercises.\n    </Text>\n  </Container>\n);\nexport default Home;\n","import { TaskProps } from \"../components/Task\";\nimport { YearItemProps } from \"../ui/YearItem\";\n\n\nexport async function getInput(file: string, separator: string = '\\n'): Promise<string[]> {\n    const response = await fetch(process.env.PUBLIC_URL + file);\n    const text = await response.text()\n    return text.split(separator);\n}\n\nexport async function getFileAsText(uri: string, isInternal = false): Promise<string> {\n    uri = isInternal ? process.env.PUBLIC_URL + uri : uri\n    const response = await fetch(uri);\n    let text = await response.text()\n    return text;\n}\n\nexport function getTask(year: string, day: string, years: YearItemProps[]): TaskProps | undefined {\n    return years.find(y => y.id === year)?.tasks.find(task => task.id === day)\n};","import { createContext } from 'react';\nimport { YearItemProps } from './ui/YearItem';\n\nconst SolutionContext = createContext<YearItemProps[]>([]);\n\nexport default SolutionContext;","import {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  Button,\n  Flex,\n  Text,\n  Heading,\n  Link,\n  HStack,\n} from \"@chakra-ui/react\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { TaskItemProps } from \"../ui/TaskItem\";\nimport { getFileAsText, getTask } from \"../utils\";\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/hljs'\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript'\nimport { ArrowForwardIcon, ExternalLinkIcon } from \"@chakra-ui/icons\";\nimport { useParams } from \"react-router-dom\";\nimport SolutionContext from \"../solutionContext\";\n\ninterface ParamTypes {\n  year: string\n  day: string\n}\n\nexport type TaskProps = TaskItemProps & {\n  descriptionUri?: string;\n  solutionUri: string;\n  inputUri: string;\n  solutionFn?: Function;\n};\nconst Task = () => {\n  const { year, day } = useParams<ParamTypes>();\n  const years = useContext(SolutionContext);\n  \n  const task = getTask(\n    year,\n    day,\n    years\n  );\n  const [code, setCode] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [solution1, setSolution1] = useState(\"0\");\n  const [solution2, setSolution2] = useState(\"0\");\n  let solutionUri = \"\";\n  let inputUri = \"\";\n\n  SyntaxHighlighter.registerLanguage('javascript', js);\n\n  useEffect(() => {\n    const loadData = async () => {\n      if (solutionUri) {\n        const codeAsText = await getFileAsText(solutionUri);\n        setCode(codeAsText);\n      }\n      if (inputUri) {\n        const inputAsText = await getFileAsText(inputUri, true);\n        setInput(inputAsText);\n      }\n    };\n\n    setSolution1(\"0\");\n    setSolution2(\"0\");\n    loadData();\n  }, [year, day, inputUri, solutionUri]);\n\n\n  if (task === undefined) {\n    return <div> not found </div>\n  }\n  const { title, descriptionUri, solutionUri: tempSolutionUri, inputUri: tempInputUri, solutionFn } = task;\n  solutionUri = tempSolutionUri;\n  inputUri = tempInputUri;\n\n  \n  const calculateSolution = async () => {\n    if (solutionFn) {\n      setIsLoading(true);\n      const sol1 = await solutionFn(true, inputUri);\n      const sol2 = await solutionFn(false, inputUri);\n      setSolution1(sol1);\n      setSolution2(sol2);\n      setIsLoading(false);\n    }\n  };\n  return (\n    <Flex direction=\"column\" padding={5} textAlign=\"left\">\n      <Heading as=\"h5\" marginBottom={5}>\n        {title}\n        <Link href={descriptionUri} isExternal padding={3}>\n          <ExternalLinkIcon boxSize={5} marginBottom={5} />\n        </Link>{\" \"}\n      </Heading>\n      <HStack spacing=\"24px\" padding={5} paddingLeft={0}>\n        <Button\n          colorScheme=\"teal\"\n          variant=\"outline\"\n          isLoading={isLoading}\n          loadingText=\"Calculating\"\n          rightIcon={<ArrowForwardIcon />}\n          onClick={() => calculateSolution()}\n        >\n          try out\n        </Button>\n        <Text as=\"samp\">Part one: </Text>\n        <Text as=\"code\">{solution1}</Text>\n        <Text as=\"samp\">Part two: </Text>\n        <Text as=\"code\">{solution2}</Text>\n      </HStack>\n      <Accordion allowToggle>\n        <AccordionItem>\n          <AccordionButton>\n            <Box flex=\"1\" textAlign=\"left\">\n              Code\n            </Box>\n            <AccordionIcon />\n          </AccordionButton>\n          <AccordionPanel textAlign=\"left\" pb={4}>\n            <SyntaxHighlighter\n              language=\"javascript\"\n              wrapLongLines\n              showLineNumbers\n              style={darcula}\n            >\n              {code}\n            </SyntaxHighlighter>\n          </AccordionPanel>\n        </AccordionItem>\n        <AccordionItem>\n          <AccordionButton>\n            <Box flex=\"1\" textAlign=\"left\">\n              Input\n            </Box>\n            <AccordionIcon />\n          </AccordionButton>\n          <AccordionPanel textAlign=\"left\" pb={4}>\n            <SyntaxHighlighter language=\"text\" showLineNumbers style={darcula}>\n              {input}\n            </SyntaxHighlighter>\n          </AccordionPanel>\n        </AccordionItem>\n      </Accordion>\n    </Flex>\n  );\n};\n\nexport default Task;\n","import { getInput } from \"../../../utils\";\n\nconst reportRepair = async (part1: boolean, inputUri: string) => {\n\n    const string_list = await getInput(inputUri);\n\n    const list = string_list.map(line => +line);\n    for (let i = 0; i < list.length; i++) {\n        const element1 = list[i];\n        for (let j = 0; j < list.length; j++) {\n            const element2 = list[j];\n            if (part1) {\n                if (element1 + element2 === 2020) {\n                    return element1 * element2;\n                }\n\n            } else {\n                for (let z = 0; z < list.length; z++) {\n                    const element3 = list[z];\n                    if ((element1 + element2 + element3) === 2020) {\n                        return element1 * element2 * element3\n                    }\n                }\n            }\n        }\n\n    }\n}\n\nexport default reportRepair;","import * as _ from \"lodash\";\nimport { getInput } from \"../../../utils\";\n\ninterface PwdValidInput {\n    row: string;\n    part1: boolean\n}\n\ninterface ExtractedInfos {\n    low: number;\n    high: number;\n    value: string;\n    password: string;\n}\n\nconst passwordPhilosophy = async (part1: boolean, inputUri: string): Promise<number> => {\n    const list = await getInput(inputUri);\n    return list.filter(elem => isPwdValid({ row: elem, part1: part1 })).length\n}\n\n\nconst isPwdValid = (input: PwdValidInput): boolean => {\n    const { low, high, value, password } = extractInfosFromRow(input.row);\n    if (input.part1) {\n        const occurence = count(password, value)\n        return low <= occurence && occurence <= high;\n    } else {\n        const lowMatched = password.charAt(+low - 1).startsWith(value);\n        const highMatched = password.charAt(+high - 1).startsWith(value);\n        if (lowMatched && highMatched) return false;\n        if (lowMatched || highMatched) return true;\n        return false;\n    }\n\n}\n\nfunction extractInfosFromRow(row: string): ExtractedInfos {\n    const [range, rowValue, password] = row.split(' ');\n    const [min, max] = range.split('-');\n    const value = rowValue.replace(':', '');\n    return { low: +min, high: +max, value: value, password: password }\n}\n\nfunction count(str: string, chr: string): number {\n    return _.countBy(str)[chr] | 0;\n}\n\nexport default passwordPhilosophy;","import { getInput } from \"../../../utils\";\n\nconst TREE = \"#\";\n\n\ninterface CountInput {\n    right: number,\n    down: number\n}\n\nconst tobogganTrajectory = async (part1: boolean, inputUri: string): Promise<number> => {\n\n    const list = await getInput(inputUri);\n\n    let countInputs: Array<CountInput> = [{ right: 3, down: 1 }];\n    var countTree = 0;\n    if (!part1) {\n        countInputs = [{ right: 1, down: 1 }, { right: 3, down: 1 }, { right: 5, down: 1 }, { right: 7, down: 1 }, { right: 1, down: 2 },]\n        countTree = 1;\n    }\n\n    for (const countInput of countInputs) {\n        if (part1) {\n            countTree = countTree + count(countInput, list)\n        } else {\n            countTree = countTree * count(countInput, list)\n        }\n\n    }\n    return countTree;\n}\n\n\nconst count = (input: CountInput, list: Array<string>): number => {\n    var { right, down } = input\n\n    var max_x = list[0].length;\n    var position: string;\n    var treeCount = 0;\n    for (let y = input.down; y < list.length; y += down) {\n        position = list[y][right]\n        if (position.startsWith(TREE)) {\n            treeCount += 1;\n        }\n        right = (right + input.right) % max_x\n    }\n    return treeCount;\n}\n\nexport default tobogganTrajectory;","import { getInput } from \"../../../utils\";\n\ninterface Field {\n    regex: RegExp;\n    fieldValidator: (value: string) => boolean;\n}\n\ntype Passport = { [key: string]: string };\n\n\nconst passportProcessing = async (part1: boolean, inputUri: string): Promise<number> => {\n    const list = cleanList(await getInput(inputUri));\n    return list.filter( passport => isValidPassport(passport, part1)).length\n}\n\n\nconst cleanList = (lines: Array<string>): Array<Passport> => {\n    const passports = [];\n    let currentPassport: Passport = {}\n    for (const line of lines) {\n        if (!line.trim() && Object.keys(currentPassport).length > 0) {\n            passports.push(currentPassport);\n            currentPassport = {};\n        } else {\n            const keyValue = line.trim().split(\" \").map(t => t.trim().split(\":\"));\n            for (const [field, value] of keyValue) {\n                currentPassport[field] = value;\n            }\n        }\n    }\n    if (Object.keys(currentPassport).length > 0) {\n        passports.push(currentPassport);\n    }\n    return passports;\n}\n\nconst isValidPassport = (passport: Passport, part1: boolean): boolean => {\n    const fields: Map<string, Field> = new Map();\n    fields.set(\"byr\", {\n        regex: new RegExp('^([0-9]{4})$'),\n        fieldValidator: (value: string) => ((parseInt(value, 10) > 1919) && (parseInt(value, 10) < 2003))\n    });\n    fields.set(\"iyr\", {\n        regex: new RegExp('^([0-9]{4})$'),\n        fieldValidator: (value: string) => ((parseInt(value, 10) > 2009) && (parseInt(value, 10) < 2021))\n    });\n    fields.set(\"eyr\", {\n        regex: new RegExp('^([0-9]{4})$'),\n        fieldValidator: (value: string) => ((parseInt(value, 10) > 2019) && (parseInt(value, 10) < 2031))\n    });\n    fields.set(\"hgt\", {\n        regex: new RegExp('^(([0-9]{3}cm)|([0-9]{2}in))$'),\n        fieldValidator: (value: string) => {\n            if (value.indexOf('cm') !== -1) {\n                value = value.replace('cm', '')\n                return (parseInt(value, 10) > 149) && (parseInt(value, 10) < 194);\n            }\n            if (value.indexOf('in') !== -1) {\n                value = value.replace('in', '')\n                return (parseInt(value, 10) > 58) && (parseInt(value, 10) < 77);\n            }\n            return false;\n\n        }\n    });\n    fields.set(\"hcl\", {\n        regex: new RegExp('^(#[0-9a-f]{6})$'),\n        fieldValidator: (value: string) => true\n    });\n    fields.set(\"ecl\", {\n        regex: new RegExp('^(amb|blu|brn|gry|grn|hzl|oth)$'),\n        fieldValidator: (value: string) => true\n    });\n\n    fields.set(\"pid\", {\n        regex: new RegExp('^([0-9]{9})$'),\n        fieldValidator: (value: string) => true\n    });\n\n    for (const [field, {regex, fieldValidator}] of fields.entries()) {\n        const value = passport[field]\n        if (!value) return false\n        if (!part1 && (!regex.test(value) || !fieldValidator(value))) return false\n\n    }\n\n    return true;\n}\n\n\n\n\nexport default passportProcessing;","import * as _ from \"lodash\";\nimport { getInput } from \"../../../utils\";\n\nconst TRANSALTION = new Map<string, string>([[\"F\",\"0\"], [\"B\",\"1\"], [\"R\", \"1\"], [\"L\", \"0\"]]);\nconst FACTOR = 8;\n\nconst binaryBoarding = async (part1: boolean, inputUri: string): Promise<number> => {\n    const list = await getInput(inputUri);\n    \n    const seatIds = list.map(passport => convertToSeatId(passport));\n    const max = _.max(seatIds);\n    if (part1 && max) return max;\n\n    const min = _.min(seatIds);\n    if (min) {\n        const allSeatsIds = _.range(min, max);\n        const mySeatId = _.difference(allSeatsIds, seatIds)[0];\n        return mySeatId;\n    }\n    return 0\n}\n\nconst convertToSeatId = (boardingPass: string): number => {\n    let seatId = \"\"\n    for (var i = 0; i < boardingPass.length; i++) {\n        seatId += TRANSALTION.get(boardingPass.charAt(i))\n    }\n    const row = parseInt(seatId.substr(0, 7), 2);\n    const column = parseInt(seatId.substr(7, 10), 2);\n    return row*FACTOR + column;\n}\n\nexport default binaryBoarding;\n","import { getInput } from \"../../../utils\";\nimport * as _ from 'lodash';\n\nconst CustomCustoms = async (part1: boolean, inputUri: string): Promise<string> => {\n    const list = await getInput(inputUri, '\\n\\n');\n    if (part1) return _.sum(\n        list\n            .map(line => new Set(line\n                            .replaceAll(\"\\n\", \"\")\n                            .split(\"\")\n                        ).size)\n                    ).toString()\n\n    const everyoneAnsweredYes = list.map(line => {\n        let answers = 0;\n        const allAnswers = new Set(line.replaceAll(\"\\n\", \"\").split(\"\"))\n        const answersProPerson = line.split(\"\\n\").map(answers => answers.split(\"\"));\n        \n        for (const answ of allAnswers) {\n            let yesForEveryone = true;\n            for (const answPerson of answersProPerson) {\n                if (!_.includes(answPerson, answ)) {\n                    yesForEveryone = false;\n                    break;\n                }\n            }\n            if (yesForEveryone) answers +=1\n            yesForEveryone = true;\n        }\n        return answers;\n    })\n    \n\n    return _.sum(everyoneAnsweredYes).toString()\n\n\n}\n\nexport default CustomCustoms;","import { getInput } from \"../../../utils\";\nimport * as _ from 'lodash';\n\nconst handyHaversacks = async (part1: boolean, inputUri: string): Promise<string> => {\n    const list = await getInput(inputUri);\n    const myBag = \"shiny gold\";\n\n    const bagRules = list.map(entry => createRule(entry));\n    let validBagsCount = 0;\n    if (part1) {\n        for (const rule of bagRules) {\n            if (isValidBag(rule.bags, bagRules)) validBagsCount++;\n        }\n        return validBagsCount.toString()\n    };\n    const myBagRule = getRule(myBag, bagRules);\n    return countBags(myBagRule, bagRules).toString()\n}\n\ninterface BagRule {\n    bagType: string;\n    bags: Bag[];\n}\n\ninterface Bag {\n    bagType: string;\n    count: number;\n}\n\nconst countBags = (bags: Bag[], rules: BagRule[]): number => {\n    return bags.reduce((acc, bag) => {\n        const bagRule = getRule(bag.bagType, rules)\n        return acc + bag.count + bag.count * countBags(bagRule, rules)\n    }, 0)\n}\n\nconst isValidBag = (bags: Bag[], rules: BagRule[]): boolean => {\n    if (_.some(bags, bag => bag.bagType.startsWith(\"shiny gold\"))) return true\n    if (bags.length === 0) return false\n    bags = _.remove(bags, bag => bag.count > 0);\n    const newList = bags.flatMap(bag => getRule(bag.bagType, rules))\n    return isValidBag(newList, rules)\n}\n\nconst getRule = (bagType: string, list: BagRule[]): Bag[] => {\n    const bagIndex = list.findIndex(entry => entry.bagType.startsWith(bagType))\n    if (bagIndex === -1) return []\n    return list[bagIndex].bags\n\n}\n\nconst createRule = (entry: string): BagRule => {\n    const bagRegex = new RegExp(`^([a-zA-z]+ [a-zA-z]+) bags contain (.*)$`);\n    const bagdRegex = new RegExp(`([0-9]+) ([a-zA-z]+ [a-zA-z]+) [a-z]+`);\n\n    let [, bag, rawBags] = entry.match(bagRegex);\n    let rawBagsist = rawBags.replace('.', '').split(',');\n\n    const bags = rawBagsist.reduce((filtered, rawBag) => {\n        const rawBagMatch = rawBag.match(bagdRegex);\n        if (rawBagMatch) {\n            const bag = {\n                bagType: rawBagMatch[2],\n                count: +rawBagMatch[1]\n            }\n            filtered.push(bag);\n        }\n        return filtered;\n    }, [] as Bag[]);\n\n    return { bagType: bag, bags: bags }\n\n}\n\nexport default handyHaversacks;","import { YearItemProps } from \"../ui/YearItem\";\nimport reportRepair from \"./2020/1_report_repair\";\nimport passwordPhilosophy from \"./2020/2_password_philosophy\";\nimport tobogganTrajectory from \"./2020/3_toboggan_trajectory\";\nimport passportProcessing from \"./2020/4_passport_processing\";\nimport binaryBoarding from \"./2020/5_binary_boarding\";\nimport customCustoms from \"./2020/6_custom_customs\";\nimport handyHaversacks from \"./2020/7_handy_haversacks\";\n\nconst solutions: YearItemProps[] = [\n    {\n        id: \"2020\",\n        tasks: [\n            {\n                id: \"1\",\n                title: \"Day 1: Report Repair\",\n                first: true,\n                second: true,\n                descriptionUri: \"https://adventofcode.com/2020/day/1\",\n                solutionUri:\n                  \"https://raw.githubusercontent.com/JonasNicoletti/advent-of-code/main/src/solutions/2020/1_report_repair/index.ts\",\n                inputUri: \"/data/report_repair.txt\",\n                solutionFn: reportRepair,\n              },\n              {\n                id: \"2\",\n                title: \"Day 2: Password Philosophy\",\n                first: true,\n                second: true,\n                descriptionUri: \"https://adventofcode.com/2020/day/2\",\n                solutionUri:\n                  \"https://raw.githubusercontent.com/JonasNicoletti/advent-of-code/main/src/solutions/2020/2_password_philosophy/index.ts\",\n                inputUri: \"/data/password_philosophy.txt\",\n                solutionFn: passwordPhilosophy,\n              },\n              {\n                id: \"3\",\n                title: \"Day 3: Toboggan Trajectory\",\n                first: true,\n                second: true,\n                descriptionUri: \"https://adventofcode.com/2020/day/3\",\n                inputUri: \"/data/toboggan_trajectory.txt\",\n                solutionUri:\n                  \"https://raw.githubusercontent.com/JonasNicoletti/advent-of-code/main/src/solutions/2020/3_toboggan_trajectory/index.ts\",\n                solutionFn: tobogganTrajectory,\n              },\n              {\n                id: \"4\",\n                title: \"Day 4: Passport Processing\",\n                first: true,\n                second: true,\n                descriptionUri: \"https://adventofcode.com/2020/day/4\",\n                inputUri: \"/data/passport_processing.txt\",\n                solutionUri:\n                  \"https://raw.githubusercontent.com/JonasNicoletti/advent-of-code/main/src/solutions/2020/4_passport_processing/index.ts\",\n                solutionFn: passportProcessing,\n              },\n              {\n                id: \"5\",\n                title: \"Day 5: Binary Boarding\",\n                first: true,\n                second: true,\n                descriptionUri: \"https://adventofcode.com/2020/day/5\",\n                inputUri: \"/data/binary_boarding.txt\",\n                solutionUri:\n                  \"https://raw.githubusercontent.com/JonasNicoletti/advent-of-code/main/src/solutions/2020/5_binary_boarding/index.ts\",\n                solutionFn: binaryBoarding,\n              },\n              {\n                id: \"6\",\n                title: \"Day 6: Custom Customs\",\n                first: true,\n                second: true,\n                descriptionUri: \"https://adventofcode.com/2020/day/6\",\n                inputUri: \"/data/custom_customs.txt\",\n                solutionUri:\n                  \"https://raw.githubusercontent.com/JonasNicoletti/advent-of-code/main/src/solutions/2020/6_custom_customs/index.ts\",\n                solutionFn: customCustoms,\n              },\n              {\n                id: \"7\",\n                title: \"Day 7: Handy Haversacks\",\n                first: true,\n                second: true,\n                descriptionUri: \"https://adventofcode.com/2020/day/7\",\n                inputUri: \"/data/handy_haversacks.txt\",\n                solutionUri:\n                  \"https://raw.githubusercontent.com/JonasNicoletti/advent-of-code/main/src/solutions/2020/7_handy_haversacks/index.ts\",\n                solutionFn: handyHaversacks,\n              },\n        ]\n    }\n]\n\nexport default solutions;","import * as React from \"react\";\nimport {\n  ChakraProvider,\n  Box,\n  Grid,\n  useDisclosure,\n  extendTheme,\n} from \"@chakra-ui/react\";\nimport { Header } from \"./components/Header\";\nimport Drawer from \"./components/Drawer\";\nimport Home from \"./components/Home\";\nimport Task from \"./components/Task\";\nimport SolutionContext from \"./solutionContext\";\nimport solutions from \"./solutions\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\n\nexport const App = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const config = {\n    useSystemColorMode: false,\n    initialColorMode: \"dark\",\n  };\n\n  const customTheme = extendTheme({ config });\n\n  return (\n    <ChakraProvider theme={customTheme}>\n      <SolutionContext.Provider value={solutions}>\n        <Router basename={\"advent-of-code\"}>\n          <Box textAlign=\"center\" fontSize=\"xl\">\n            <Header\n              openDrawer={onOpen}\n              closeDrawer={onClose}\n              isDrawerOpen={isOpen}\n            />\n            <Drawer\n              isOpen={isOpen}\n              onClose={onClose}\n              years={solutions}\n            />\n            <Grid minH=\"100vh\" p={3}>\n              <Route path=\"/:year/:day\" children={<Task />} />\n              <Route path=\"/\" exact>\n                <Home />\n              </Route>\n            </Grid>\n          </Box>\n        </Router>\n      </SolutionContext.Provider>\n    </ChakraProvider>\n  );\n};\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}